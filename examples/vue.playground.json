{"files":{"call.js":{"content":"const template = `<div class=\"call-wrapper\">\n  <ul>\n    <li>{{name}}</li>\n    <li>hello</li>\n    <input type=\"text\" @blur=\"change\" v-model=\"pname\"/>\n  </ul>\n</div>`\n\nexport default Vue.component('call', {\n  template,\n  props: {\n    name: {\n      type: String,\n      default: 'logicflow'\n    },\n  },\n  data() {\n    return {\n      pname: ''\n    }\n  },\n  methods: {\n    change() {\n      this.$emit('change-name', this.pname)\n    }\n  },\n});\n"},"index.html":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link rel=\"stylesheet\" href=\"//unpkg.com/@logicflow/core/dist/style/index.css\" />\n  <link rel=\"stylesheet\" href=\"./style.css\" />\n  <style>\n    #container {\n      height: 100%;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"container\"></div>\n  <script src=\"//unpkg.com/@logicflow/core/dist/logic-flow.js\"></script>\n  <!-- <script src=\"http://localhost:9099/logic-flow.js\"></script> -->\n  <script src=\"//unpkg.com/vue@2.6.14/dist/vue.min.js\"></script>\n  <script type=\"module\" src=\"./index.js\"></script>\n</body>\n</html>"},"index.js":{"content":"import Call from './call.js'\n\nconst lf = new LogicFlow({\n  container: document.querySelector('#container'),\n  grid: true,\n});\n\nclass UserNode extends HtmlNode {\n  shouldUpdate() {\n    const { properties } = this.getAttributes();\n    if (this.currrentProperties && this.currrentProperties === JSON.stringify(properties)) return false;\n    this.currrentProperties = JSON.stringify(properties)\n    return true;\n  }\n  setHtml(rootEl) {\n    // todo: 和react不一样，还没有找到合适的利用vue内置的diff算法来计算节点是否需要更新。\n    if (!this.shouldUpdate()) return;\n    const { properties } = this.getAttributes();\n    const { model } = this.props;\n    const el = document.createElement('div');\n    rootEl.innerHTML = '';\n    rootEl.appendChild(el);\n    const Profile = Vue.extend({\n      render: (h) => {\n        return h(Call, {\n          props: {\n            name: properties.name\n          },\n          on: {\n            'change-name': (pname) => {\n              model.setProperties({\n                name: pname\n              })\n            }\n          }\n        })\n      }\n    })\n    new Profile().$mount(el)\n  }\n}\n\nclass UserNodeModel extends HtmlNodeModel {\n  setAttributes() {\n    this.text.editable = false;\n    const width = 200;\n    const height = 100;\n    this.width = width;\n    this.height = height;\n\n    this.anchorsOffset = [\n      [width / 2, 0],\n      [0, height / 2],\n      [-width / 2, 0],\n      [0, -height/2],\n    ]\n  }\n}\n\nlf.register({\n  type: 'vue-html',\n  view: UserNode,\n  model: UserNodeModel,\n})\n\nlf.render({\n  nodes: [\n    {\n      type: 'vue-html',\n      x: 150,\n      y: 150,\n    }\n  ]\n});\n\nconsole.log(111);"},"style.css":{"content":"html, body {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n.call-wrapper {\n  background: #fff;\n  border: 1px solid #989098;\n  width: 200px;\n  height: 100px;\n  box-sizing: border-box;\n  padding: 5px;\n}"}}}